@mixin montserrat-reg  {
	font-family: $body-font;
	font-weight: $body-font-reg;
	line-height: $line-height;
}

@mixin montserrat-light {
	font-family: $body-font;
	font-weight: $body-font-light;
	line-height: $line-height;
}

@mixin oswald-type {
	font-family: $header-font;
	font-weight: $header-weight;
	text-transform: uppercase;
}

@mixin col-wrap {
	display: flex;
	flex-flow: column wrap;
}

@mixin col-nowrap {
	display: flex;
	flex-flow: column nowrap;
}

@mixin row-wrap {
	display: flex;
	flex-flow: row wrap;
}

@mixin row-nowrap {
	display: flex;
	flex-flow: row nowrap;
}


$breakpoints: (
	'small-min':(min-width: 480px),
	'small-max': (max-width: 480px),
	'medium': (min-width: 750px),
	'resume-large': (min-width: 922px),
	'about-medium': (min-width: 866px),
	'large-min': (min-width: 1225px)
) !default;

// Found this Mixin at CSS-Tricks
/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
}